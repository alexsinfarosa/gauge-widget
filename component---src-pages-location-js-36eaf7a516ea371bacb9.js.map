{"version":3,"sources":["webpack:///./src/pages/location.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/styled/sharedComponents.js","webpack:///./src/components/header.js","webpack:///./src/components/styled/buttonLink.js"],"names":["initialState","address","lat","lng","streetNumber","isStreetNumberRequired","reducer","state","action","type","Object","assign","Error","LocationPage","theme","useTheme","_React$useContext","React","useContext","AppContext","loading","setLoading","globalDispatch","_React$useReducer","useReducer","localDispatch","_React$useState","useState","errorMessage","setErrorMessage","handleError","_ref2","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","status","clearSuggestions","wrap","_context","prev","next","stop","_x","_x2","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_16__","_components_seo__WEBPACK_IMPORTED_MODULE_17__","title","_components_styled_sharedComponents__WEBPACK_IMPORTED_MODULE_20__","_components_header__WEBPACK_IMPORTED_MODULE_18__","icon","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_15__","my","mb","align","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_14__","variant","gutterBottom","_material_ui_core_FormGroup__WEBPACK_IMPORTED_MODULE_11__","row","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_12__","control","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_13__","checked","color","onChange","label","react_places_autocomplete__WEBPACK_IMPORTED_MODULE_21___default","value","onSelect","geocodeByAddress","then","results","formattedAddress","formatted_address","split","isNaN","getLatLng","_ref","hideVirtualKeyboard","catch","error","console","shouldFetchSuggestions","length","onError","_ref3","getInputProps","suggestions","getSuggestionItemProps","Fragment","noValidate","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_7__","id","placeholder","fullWidth","margin","SelectProps","native","InputProps","endAdornment","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_9__","position","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_10__","aria-label","onClick","className","map","suggestion","active","style","backgroundColor","palette","primary","main","borderRadius","padding","cursor","description","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_8__","mx","_components_styled_buttonLink__WEBPACK_IMPORTED_MODULE_19__","to","disabled","_callee2","forecast","_context2","fetchForecastData","sent","Layout","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_4__","maxWidth","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","SEO","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","defaultProps","string","arrayOf","object","__webpack_require__","d","__webpack_exports__","GridContainer","MainContainer","InfoContainer","styled_components__WEBPACK_IMPORTED_MODULE_0__","styled","div","withConfig","displayName","componentId","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","Header","right","display","justifyContent","alignItems","height","component","size","window","history","back","StyledButton","Button","ButtonLink","props","Link"],"mappings":"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","file":"component---src-pages-location-js-36eaf7a516ea371bacb9.js","sourcesContent":["import React from \"react\"\n\nimport { useTheme } from \"@material-ui/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Divider from \"@material-ui/core/Divider\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport FormGroup from \"@material-ui/core/FormGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Box from \"@material-ui/core/Box\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\nimport ButtonLink from \"../components/styled/buttonLink\"\nimport { GridContainer } from \"../components/styled/sharedComponents\"\n\n// GOOGLE API\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\"\nimport hideVirtualKeyboard from \"hide-virtual-keyboard\"\n\n// UTILS ---------------------------------\nimport { fetchForecastData } from \"../utils/api\"\n\nimport AppContext from \"../appContext\"\n\n// Initial State --------------------------------------------------\nconst initialState = {\n  address: \"\",\n  lat: null,\n  lng: null,\n  streetNumber: null,\n  isStreetNumberRequired: false,\n}\n\n// REDUCER ---------------------------------------------------------\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setAddress\":\n      return { ...state, address: action.address }\n    case \"setLatLng\":\n      return { ...state, lat: action.lat, lng: action.lng }\n    case \"setStreetNumber\":\n      return { ...state, streetNumber: action.streetNumber }\n    case \"toggleIsStreetNumberRequired\":\n      return {\n        address: \"\",\n        lat: null,\n        lng: null,\n        streetNumber: null,\n        isStreetNumberRequired: !state.isStreetNumberRequired,\n      }\n    case \"reset\":\n      return {\n        address: \"\",\n        lat: null,\n        lng: null,\n        streetNumber: null,\n        isStreetNumberRequired: false,\n      }\n    default:\n      throw new Error()\n  }\n}\n\nconst LocationPage = () => {\n  // console.log(\"LocationPage\")\n  const theme = useTheme()\n\n  // CONTEXT -----------------------------------------------\n  const { loading, setLoading, globalDispatch } = React.useContext(AppContext)\n\n  // STATE ------------------------------------------------\n  const [state, localDispatch] = React.useReducer(reducer, initialState)\n  const [errorMessage, setErrorMessage] = React.useState(\"\")\n\n  // Handle address change --------------------------------\n  const handleAddressChange = address => {\n    localDispatch({ type: \"setAddress\", address })\n    setErrorMessage(\"\")\n  }\n\n  // Determine street number if checkbox is selected\n  const determineStreetNumber = address => {\n    const arr = address.split(\" \")\n    const streetNumber = +arr[0]\n    if (!isNaN(streetNumber)) {\n      localDispatch({ type: \"setStreetNumber\", streetNumber })\n    }\n  }\n\n  // Click on one of the suggested addresses of the list\n  const handleSelectAddress = address => {\n    localDispatch({ type: \"setAddress\", address })\n    geocodeByAddress(address)\n      .then(results => {\n        const formattedAddress = results[0].formatted_address\n        if (state.isStreetNumberRequired) {\n          determineStreetNumber(formattedAddress)\n        }\n        return getLatLng(results[0])\n      })\n      .then(({ lat, lng }) => {\n        if (!(lat >= 37.2 && lat <= 47.6) || !(lng >= -82.7 && lng <= -66.1)) {\n          setErrorMessage(\"ZERO_RESULTS\")\n        } else {\n          localDispatch({ type: \"setLatLng\", lat, lng })\n          hideVirtualKeyboard()\n        }\n      })\n      .catch(error => console.error(\"Error\", error))\n  }\n\n  // Returns error if address is not valid\n  const handleError = async (status, clearSuggestions) => {\n    // console.log(\"Error from Google Maps API\", status);\n    setErrorMessage(status)\n    clearSuggestions()\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Location\" />\n\n      <GridContainer>\n        <Header icon=\"chevron-left\" title=\"Create Location - (step 1/3)\" />\n\n        <Box my={2}>\n          <Box mb={4} align=\"center\">\n            <Typography variant=\"h6\" gutterBottom>\n              Enter Your Location\n            </Typography>\n          </Box>\n\n          <Box mb={2}>\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={state.isStreetNumberRequired}\n                    color=\"primary\"\n                    onChange={() =>\n                      localDispatch({ type: \"toggleIsStreetNumberRequired\" })\n                    }\n                  />\n                }\n                label=\"My street number follows the odd/even irrigation ordinance\"\n              />\n            </FormGroup>\n          </Box>\n\n          {/* Google places input */}\n          <Box>\n            <PlacesAutocomplete\n              value={state.address}\n              onChange={handleAddressChange}\n              onSelect={handleSelectAddress}\n              shouldFetchSuggestions={state.address.length > 2}\n              onError={handleError}\n            >\n              {({\n                getInputProps,\n                suggestions,\n                getSuggestionItemProps,\n                loading,\n              }) => (\n                <>\n                  <form noValidate autoComplete=\"off\">\n                    <TextField\n                      autoComplete=\"off\"\n                      id=\"address\"\n                      label=\"Address\"\n                      placeholder=\"Type your address\"\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      SelectProps={{ native: true }}\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              aria-label=\"delete typed address\"\n                              onClick={() => localDispatch({ type: \"reset\" })}\n                            >\n                              <small>&#10005;</small>\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                      {...getInputProps({ className: \"location-search-input\" })}\n                    />\n                  </form>\n\n                  {/* SUGGESTIONS */}\n                  <div>\n                    {loading && (\n                      <Box align=\"center\">\n                        <Typography variant=\"caption\">Loading...</Typography>\n                      </Box>\n                    )}\n\n                    {!loading &&\n                      state.address.length > 0 &&\n                      errorMessage === \"ZERO_RESULTS\" && (\n                        <Box align=\"center\">\n                          <Typography variant=\"caption\" color=\"error\">\n                            Address is not valid\n                          </Typography>\n                        </Box>\n                      )}\n\n                    {suggestions.map(suggestion => {\n                      const className = suggestion.active\n                        ? \"suggestion-item--active\"\n                        : \"suggestion-item\"\n\n                      const style = suggestion.active\n                        ? {\n                            backgroundColor: theme.palette.primary.main,\n                            borderRadius: 4,\n                            color: \"#fff\",\n                            padding: 16,\n                            cursor: \"pointer\",\n                          }\n                        : {\n                            backgroundColor: \"#fff\",\n                            padding: 16,\n                            cursor: \"pointer\",\n                          }\n                      return (\n                        <div {...getSuggestionItemProps(suggestion)}>\n                          <div\n                            {...getSuggestionItemProps(suggestion, {\n                              className,\n                              style,\n                            })}\n                          >\n                            <Typography variant=\"caption\" color=\"inherit\">\n                              {suggestion.description}\n                            </Typography>\n                          </div>\n                          <Divider />\n                        </div>\n                      )\n                    })}\n                  </div>\n                </>\n              )}\n            </PlacesAutocomplete>\n          </Box>\n        </Box>\n\n        <Box mx={-2}>\n          <ButtonLink\n            to=\"/irrigation/\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!loading && state.lat ? false : true}\n            onClick={async () => {\n              setLoading(true)\n              const forecast = await fetchForecastData(state.lat, state.lng)\n              globalDispatch({ type: \"setLocation\", ...state })\n              globalDispatch({ type: \"setForecast\", forecast })\n              setLoading(false)\n            }}\n          >\n            Continue &rarr;\n          </ButtonLink>\n        </Box>\n      </GridContainer>\n    </Layout>\n  )\n}\n\nexport default LocationPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Container from \"@material-ui/core/Container\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Container maxWidth=\"sm\" style={{ padding: 0 }}>\n        {children}\n      </Container>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import styled from \"styled-components\"\n\nexport const GridContainer = styled.div`\n  display: grid;\n  height: 100vh;\n  grid-template-rows: 60px auto 80px;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 80px);\n  overflow-y: scroll;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n  &::-webkit-scrollbar {\n    /* WebKit */\n    width: 0;\n    height: 0;\n  }\n  padding-top: 16px;\n`\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 160px);\n  overflow-y: scroll;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n  &::-webkit-scrollbar {\n    /* WebKit */\n    width: 0;\n    height: 0;\n  }\n  padding-top: 16px;\n`\n","import React from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Box from \"@material-ui/core/Box\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Header = ({ icon, title, right }) => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      height=\"60px\"\n      mb={1}\n    >\n      <Box component=\"span\">\n        <FontAwesomeIcon\n          icon={icon}\n          size=\"lg\"\n          onClick={() => window.history.back()}\n        />\n      </Box>\n      <Box component=\"span\">\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Box component=\"span\">{right}</Box>\n    </Box>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { Link } from \"@reach/router\"\nimport styled from \"styled-components\"\n\nconst StyledButton = styled(Button)`\n  padding: 24px 32px;\n  font-size: 1.1rem;\n  height: 80px;\n  width: 100%;\n  border-top-left-radius: 0px;\n  border-top-right-radius: 0px;\n  border-bottom-left-radius: 0px;\n  border-bottom-right-radius: 0px;\n`\n\nexport default function ButtonLink(props) {\n  return <StyledButton component={Link} {...props} />\n}\n"],"sourceRoot":""}