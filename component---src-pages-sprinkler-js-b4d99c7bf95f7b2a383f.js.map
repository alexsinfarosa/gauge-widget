{"version":3,"sources":["webpack:///./src/components/imgSprinkler.js","webpack:///./src/pages/sprinkler.js","webpack:///./src/components/styled/sharedComponents.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/images/fixedSpray-spr.png","webpack:///./src/images/kcRotor-spr.png","webpack:///./src/images/rotaryNozzle-spr.png"],"names":["StyledImg","styled","Img","withConfig","displayName","componentId","SprinklerImage","props","react_default","a","createElement","gatsby_browser_entry","query","render","_ref","file","images","edges","find","image","node","publicURL","src","fluid","childImageSharp","data","_1420936323","sprinklers","name","img","FixedSpray","rate","minutes","isSelected","KcRotor","RotaryNozzle","initialState","reducer","state","action","type","Object","assign","Error","useStyles","makeStyles","theme","gridList","flexWrap","width","height","SprinklerPage","_React$useContext","React","useContext","AppContext","globalDispatch","lawn","addLawn","hasDataAndForecast","classes","useTheme","sliderStyles","borderColor","palette","primary","main","marginLeft","marginTop","backgroundColor","_React$useReducer","useReducer","localDispatch","_React$useState","useState","isCustom","setIsCustom","layout","seo","title","sharedComponents","header","icon","Box","my","mb","display","justifyContent","alignItems","Typography","variant","mx","GridList","className","cols","map","sprinkler","GridListTile","key","style","imgSprinkler","GridListTileBar","actionIcon","IconButton","Checkbox","checked","onChange","value","color","border","px","borderRadius","FormGroup","row","FormControlLabel","control","label","flexGrow","es","min","step","max","trackStyle","handleStyle","align","disabled","toFixed","to","onClick","now","Date","updatedLawn","sprinklerType","sprinklerRate","sprinklerMinutes","id","updated","__webpack_require__","d","__webpack_exports__","GridContainer","MainContainer","InfoContainer","StyledLink","StyledButton","styled_components__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_colors_indigo__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_colors_indigo__WEBPACK_IMPORTED_MODULE_2___default","n","div","Link","indigo","css","Layout","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_4__","maxWidth","padding","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","string","arrayOf","object","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","Header","right","component","size","window","history","back","module","exports","p"],"mappings":"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","file":"component---src-pages-sprinkler-js-b4d99c7bf95f7b2a383f.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nconst StyledImg = styled(Img)`\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n  height: 220px;\n`\n\nfunction renderImage(file) {\n  // console.log(file);\n  return <StyledImg fluid={file.node.childImageSharp.fluid} />\n}\n\nconst SprinklerImage = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile(filter: { name: { regex: \"/-spr/\" } }) {\n          edges {\n            node {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 250) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={({ images }) =>\n      renderImage(\n        images.edges.find(image => image.node.publicURL === props.src)\n      )\n    }\n  />\n)\nexport default SprinklerImage\n","import React from \"react\"\n\nimport { makeStyles, useTheme } from \"@material-ui/styles\"\nimport GridList from \"@material-ui/core/GridList\"\nimport GridListTile from \"@material-ui/core/GridListTile\"\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Typography from \"@material-ui/core/Typography\"\nimport FormGroup from \"@material-ui/core/FormGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Box from \"@material-ui/core/Box\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\n\nimport { GridContainer } from \"../components/styled/sharedComponents\"\nimport { StyledButton } from \"../components/styled/sharedComponents\"\n\nimport ImageSprinkler from \"../components/imgSprinkler\"\n\n// SPRINKER IMAGES------------------------\nimport FixedSpray from \"../images/fixedSpray-spr.png\"\nimport KcRotor from \"../images/kcRotor-spr.png\"\nimport RotaryNozzle from \"../images/rotaryNozzle-spr.png\"\n\n// SLIDER ---------------------------------\nimport Slider from \"rc-slider\"\nimport \"rc-slider/assets/index.css\"\n\n// CONTEXT -------------------------------\nimport AppContext from \"../appContext\"\n\n// SPRINKLERS -----------------------------\nconst sprinklers = [\n  {\n    name: \"Fixed Spray\",\n    img: FixedSpray,\n    rate: 1.4, // in/hr\n    minutes: 20,\n    isSelected: false,\n  },\n  {\n    name: \"KC Rotor\",\n    img: KcRotor,\n    rate: 0.9, // in/hr\n    minutes: 20,\n    isSelected: false,\n  },\n  {\n    name: \"Rotary Nozzle\",\n    img: RotaryNozzle,\n    rate: 0.35, // in/hr\n    minutes: 40,\n    isSelected: false,\n  },\n]\n\n// Initial state ---------------------------\nconst initialState = sprinklers[0]\n\n// REDUCER ---------------------------------\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setSprinkler\":\n      return {\n        name: action.name,\n        img: action.img,\n        rate: action.rate,\n        minutes: action.minutes,\n        isSelected: action.isSelected,\n      }\n    case \"setName\":\n      return { ...state, img: null, name: action.name }\n    case \"setMinutes\":\n      return { ...state, minutes: action.minutes }\n    case \"setRate\":\n      return { ...state, rate: action.rate }\n    case \"setIsSelected\":\n      return { ...state, isSelected: !state.isSelected }\n    case \"reset\":\n      return initialState\n    default:\n      throw new Error()\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  gridList: {\n    flexWrap: \"nowrap\",\n    width: \"100%\",\n    height: 240,\n  },\n}))\n\nconst SprinklerPage = () => {\n  const {\n    globalDispatch,\n    lawn,\n    addLawn,\n    hasDataAndForecast,\n  } = React.useContext(AppContext)\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const sliderStyles = {\n    borderColor: theme.palette.primary.main,\n    height: 28,\n    width: 28,\n    marginLeft: -14,\n    marginTop: -12,\n    backgroundColor: theme.palette.primary.main,\n  }\n\n  // State --------------------------------------------\n  const [state, localDispatch] = React.useReducer(reducer, initialState)\n  const [isCustom, setIsCustom] = React.useState(false)\n  return (\n    <Layout>\n      <SEO title=\"Location\" />\n\n      <GridContainer>\n        <Header icon=\"chevron-left\" title=\"Sprinkler Type - (step 3/3)\" />\n\n        {/* Text */}\n        <Box my={2}>\n          <Box\n            mb={2}\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Typography variant=\"h6\">Type: {state.name}</Typography>\n          </Box>\n\n          {/* Images */}\n          <Box display=\"flex\" mx={-2} height=\"220px\" mb={4}>\n            <GridList className={classes.gridList} cols={1.3}>\n              {sprinklers.map(sprinkler => {\n                const { name, img, isSelected } = sprinkler\n                return (\n                  <GridListTile key={name} style={{ height: \"220px\" }}>\n                    <ImageSprinkler src={img} />\n                    <GridListTileBar\n                      title={name}\n                      actionIcon={\n                        <IconButton>\n                          <Checkbox\n                            checked={state.name === name}\n                            onChange={() => {\n                              localDispatch({\n                                type: \"setSprinkler\",\n                                ...sprinkler,\n                                isSelected: !isSelected,\n                              })\n                              setIsCustom(false)\n                            }}\n                            value={name}\n                            style={{ color: \"#fff\" }}\n                          />\n                        </IconButton>\n                      }\n                    />\n                  </GridListTile>\n                )\n              })}\n            </GridList>\n          </Box>\n\n          <Box my={4} border={1} px={1} borderRadius={8}>\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={isCustom}\n                    color=\"primary\"\n                    onChange={() => {\n                      setIsCustom(!isCustom)\n                      localDispatch({ type: \"setMinutes\", minutes: 0 })\n                      localDispatch({ type: \"setRate\", rate: 0 })\n                      isCustom\n                        ? localDispatch({\n                            type: \"setSprinkler\",\n                            ...sprinklers[0],\n                          })\n                        : localDispatch({ type: \"setName\", name: \"Custom\" })\n                    }}\n                  />\n                }\n                label=\"Custom Values\"\n              />\n            </FormGroup>\n          </Box>\n\n          {/* Minutes Slider */}\n          <Box\n            mb={6}\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Box flexGrow={1}>\n              <Typography variant=\"h6\">Time: </Typography>\n            </Box>\n            <Box flexGrow={6}>\n              <Slider\n                min={0}\n                step={1}\n                max={120}\n                value={state.minutes}\n                onChange={minutes =>\n                  localDispatch({ type: \"setMinutes\", minutes })\n                }\n                trackStyle={{ backgroundColor: theme.palette.primary.main }}\n                handleStyle={sliderStyles}\n              />\n            </Box>\n            <Box flexGrow={1}>\n              <Typography variant=\"subtitle1\" color=\"secondary\" align=\"right\">\n                {state.minutes} <small>min</small>\n              </Typography>\n            </Box>\n          </Box>\n\n          {/* Rate Slider */}\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Box flexGrow={1}>\n              <Typography variant=\"h6\">Rate: </Typography>\n            </Box>\n\n            <Box flexGrow={6}>\n              <Slider\n                disabled={isCustom ? false : true}\n                min={0}\n                step={0.05}\n                max={2}\n                value={state.rate}\n                onChange={rate => localDispatch({ type: \"setRate\", rate })}\n                trackStyle={{ backgroundColor: theme.palette.primary.main }}\n                handleStyle={sliderStyles}\n              />\n            </Box>\n            <Box flexGrow={1}>\n              <Typography variant=\"subtitle1\" color=\"secondary\" align=\"right\">\n                {state.rate.toFixed(2)} <small>in/hr</small>\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n\n        <StyledButton\n          to={hasDataAndForecast ? \"/lawn/\" : \"/sprinkler/\"}\n          disabled={hasDataAndForecast ? false : true}\n          onClick={() => {\n            const now = Date.now()\n            const updatedLawn = {\n              ...lawn,\n              sprinklerType: state.name,\n              sprinklerRate: state.rate,\n              sprinklerMinutes: state.minutes,\n              id: now,\n              updated: now,\n            }\n            globalDispatch({ type: \"setSprinkler\", id: now, ...state })\n            addLawn(updatedLawn)\n          }}\n        >\n          Create Entry\n        </StyledButton>\n      </GridContainer>\n    </Layout>\n  )\n}\n\nexport default SprinklerPage\n","import styled, { css } from \"styled-components\"\nimport { Link } from \"gatsby\"\n\n// import pink from \"@material-ui/core/colors/pink\"\nimport indigo from \"@material-ui/core/colors/indigo\"\n\nexport const GridContainer = styled.div`\n  display: grid;\n  height: 100vh;\n  grid-template-rows: 60px auto 80px;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 80px);\n  overflow-y: scroll;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n  &::-webkit-scrollbar {\n    /* WebKit */\n    width: 0;\n    height: 0;\n  }\n  padding-top: 16px;\n`\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 160px);\n  overflow-y: scroll;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n  &::-webkit-scrollbar {\n    /* WebKit */\n    width: 0;\n    height: 0;\n  }\n  padding-top: 16px;\n`\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  padding: 24px 80px;\n  border: 1px solid ${indigo[300]};\n  border-radius: 50px;\n  text-transform: uppercase;\n  background: #ffffff;\n  display: block;\n  font-size: 1.1rem;\n  font-family: roboto;\n  color: ${indigo[300]};\n\n  ::after {\n    content: \" →\";\n  }\n\n  :hover {\n    color: #fff;\n    background: ${indigo[500]};\n    transition: all 0.2s ease 0s;\n  }\n`\n\nexport const StyledButton = styled(Link)`\n  height: 80px;\n  text-decoration: none;\n  padding: 24px 80px;\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n  text-transform: uppercase;\n  background: ${indigo[300]};\n  color: #fff;\n  text-align: center;\n  width: 100%;\n  display: block;\n  font-size: 1.1rem;\n  font-family: roboto;\n  letter-spacing: 1px;\n  line-height: 10px;\n\n  ${props =>\n    props.disabled &&\n    css`\n      background: #fafafa;\n      color: rgba(0, 0, 0, 0.67);\n    `}\n\n  ::after {\n    content: \" →\";\n  }\n\n  :hover {\n    color: #fff;\n    background: ${indigo[500]};\n    transition: all 0.3s ease 0s;\n    ${props =>\n      props.disabled &&\n      css`\n        cursor: default;\n        background: #fafafa;\n        color: rgba(0, 0, 0, 0.67);\n      `}\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Container from \"@material-ui/core/Container\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Container maxWidth=\"sm\" style={{ padding: 0 }}>\n        {children}\n      </Container>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Box from \"@material-ui/core/Box\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Header = ({ icon, title, right }) => {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      height=\"60px\"\n      mb={1}\n    >\n      <Box component=\"span\">\n        <FontAwesomeIcon\n          icon={icon}\n          size=\"lg\"\n          onClick={() => window.history.back()}\n        />\n      </Box>\n      <Box component=\"span\">\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Box component=\"span\">{right}</Box>\n    </Box>\n  )\n}\n\nexport default Header\n","module.exports = __webpack_public_path__ + \"static/fixedSpray-spr-c3e923e1bb5714f7910a364891b1fc4c.png\";","module.exports = __webpack_public_path__ + \"static/kcRotor-spr-b9408734b89d50312c9e59b97f6c7868.png\";","module.exports = __webpack_public_path__ + \"static/rotaryNozzle-spr-45cedba283e524c9c8e964bcf9a15bfb.png\";"],"sourceRoot":""}